var $_instance_funcs = ("attr css animate html text id classes fire bind toString toArray prepend val " +
						 "removeData data attr each apend hasClass removeClass addClass css not find "   +
						 "get is blur focus focusin focusout load resize scroll unload click dblclick "  +
						 "mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change "  +
						 "select submit keydown keypress keyup error parent parents next prev nextAll "  +
						 "prevAll siblings children contents").split(' ');

function $_instance_funcTemplate(name) {
	return function() {
		CODE += "$_RJS_SELECTED[" + encodeToJSON({selector: this.selector, context: this.context}) + "]." + name + "(" + Array.prototype.map.call(arguments, function(o) {return encodeToJSON(o);}).join(',') + ");\n";
	}
}

for(var i = 0; i < $_instance_funcs.length; i++) {
	eval("context.$.fn.extend({" + $_instance_funcs[i] + ": $_instance_funcTemplate('" + $_instance_funcs[i] + "')});");
}

var $_funcs = ("each extend noConflict flatten camelCase ucFirst nodeName nth equal " +
							 "sibling unique inObj setEngine filter map dir isA access copy ready " +
							 "trim type isNumber isString isNodelist isElement isArray isObject " +
							 "isFunction isUndefined isDefined publisher fn createNodeList create " +
							 "createFromCSS ajax XHR getJson getHtml getXml getJs getText").split(' ');

function $_funcTemplate(name) {
	return function() {
		CODE += "$[" + encodeToJSON(name) + "](" + Array.prototype.map.call(arguments, function(o) {
				return encodeToJSON(o);
		}).join(',') + ");";
	}
}

for(var i = 0; i < $_funcs.length; i++) {
	context.$[$_funcs[i]] = $_funcTemplate($_funcs[i]);
}
